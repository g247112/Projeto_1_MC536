-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

-- =============================
-- TABELAS DE APOIO
-- =============================

CREATE TABLE UnidadeAdministrativa (
    UA INT PRIMARY KEY,
    NOMEDE VARCHAR(255)
);

CREATE TABLE Endereco (
    ID SERIAL PRIMARY KEY,
    MUN VARCHAR(255),                              -- Município
    DISTR VARCHAR(255),                            -- Distrito
    BAIRRO VARCHAR(255),                           -- Bairro
    CIDADE VARCHAR(255),                           -- Cidade
    SIGLA_END_UF VARCHAR(2),                       -- UF
    END_ZONA VARCHAR(50)                           -- Zona (Urbana ou Rural)

);

CREATE TABLE Escola (
    CODESC INT PRIMARY KEY,              -- Código da escola (CIE/SP)
    CD_INEP INT,                         -- Código INEP
    NOMEESC VARCHAR(255),                -- Nome completo da escola
    CATESC INT,                          -- Categoria (1 = Regular; 2 = Vinculada)
    TPESC VARCHAR(100),                  -- Tipo da escola
    REGIAO VARCHAR(100),                 -- Região
    UA INT,                              -- Unidade administrativa
    ENDERECO_ID INT,                     -- Endereço completo

    FOREIGN KEY (UA) REFERENCES UnidadeAdministrativa(UA),
    FOREIGN KEY (ENDERECO_ID) REFERENCES Endereco(ID)
);

-- =============================
-- TABELAS DE CARGA HORÁRIA POR DOCENTE
-- =============================

-- Tabela de cargos docentes ou administrativos
CREATE TABLE Cargo (
    CARGO_C INT PRIMARY KEY,                 -- Código do Cargo de Classificação
    NM_CARGOC VARCHAR(255)                   -- Nome do Cargo (por exemplo, Professor)
);

-- Tabela de disciplinas e matérias (associação de disciplina mãe e matéria)
CREATE TABLE Disciplina (
    CODMAE INT PRIMARY KEY,                  -- Código da Disciplina Mãe
    DEN_CODMAE VARCHAR(255),                 -- Nome da Disciplina Mãe
    MATERIA INT,                             -- Código da Matéria Específica
    DEN_MATERIA VARCHAR(255)                 -- Nome da Matéria
);

-- Tabela de carga horária atribuída por escola, UA, cargo e disciplina
CREATE TABLE CargaHoraria (
    ID INT PRIMARY KEY,                      -- Identificador único da carga
    CICLO VARCHAR(10),                       -- Ciclo de ensino (CI, CII, EM)
    MODAL VARCHAR(100),                      -- Modalidade de ensino (ex: Regular, EJA)
    DI INT,                                  -- Dígito identificador da entrada
    JORNADA INT,                             -- Jornada de trabalho (C = Completa, B = Básica, etc.)
    CODESC INT,                              -- FK para Escola
    CARGO_C INT,                             -- FK para Cargo
    CODMAE INT,                              -- FK para Disciplina
    
     KEY (CODESC) REFERENCES Escola(CODESC),
    FOREIGN KEY (CARGO_C) REFERENCES Cargo(CARGO_C),
    FOREIGN KEY (CODMAE) REFERENCES Disciplina(CODMAE)
);

-- Tabela com detalhes de aulas
CREATE TABLE DetalheCargaHoraria (
    ID INT PRIMARY KEY,
    TOT_AULA_LIVRE INT,                      -- Total de Aulas Livres
    TOT_AULA_SUBST INT,                      -- Total de Aulas de Substituição
    TOT_GERAL_AULA INT,                      -- Soma geral das aulas
    TOT_AULA_LIVRE_NOTURNO INT,              -- Aulas Livres no período noturno
    TOT_AULA_SUBST_NOTURNO INT,              -- Aulas de Substituição no período noturno
    TOT_AULAS_NOTURNO INT,                   -- Total geral noturno
    
    FOREIGN KEY (ID) REFERENCES CargaHoraria(ID)
);

-- =============================
-- TABELAS DOS MICRODADOS DE MATRÍCULA
-- =============================

-- Tabela com informações pessoais anonimizadas do aluno
CREATE TABLE Aluno (
    CD_ALUNO_ANONIMIZADO VARCHAR(50) PRIMARY KEY,  -- Código anônimo do aluno
    IDADE INT,                                     -- Idade do aluno
    SEXO VARCHAR(1),                               -- Sexo (M/F)
    CORRACA VARCHAR(50),                           -- Cor ou raça do aluno
    NACIONAL VARCHAR(100),                         -- Nacionalidade
    MUNICIPIO_NASCIMENTO VARCHAR(255),             -- Município de nascimento
    UF_MUN_NASC VARCHAR(2)                         -- UF do município de nascimento
);

-- Tabela principal de matrículas, conectando aluno, escola e características da matrícula
CREATE TABLE Matricula (
    ID SERIAL PRIMARY KEY,                         -- Identificador único da matrícula
    CD_ALUNO_ANONIMIZADO VARCHAR(50),              -- FK para Aluno
    CD_ESCOLA INT,                                 -- FK para EscolaDetalhada
    CD_TURMA VARCHAR(50),                          -- Código da turma
    DT_MATRIC DATE,                                -- Data de matrícula
    DTINI_MATRIC DATE,                             -- Início da matrícula
    DTFIM_MATRIC DATE,                             -- Fim da matrícula
    FLAG_SIT_ALUNO VARCHAR(100),                   -- Situação do aluno (ativo, transferido etc.)

    FOREIGN KEY (CD_ALUNO_ANONIMIZADO) REFERENCES Aluno(CD_ALUNO_ANONIMIZADO),
    FOREIGN KEY (CD_ESCOLA) REFERENCES Escola(CODESC)
);

-- Tabela com os detalhes das turmas
CREATE TABLE MatriculaTurma (
    ID INT PRIMARY KEY,
    DS_TURMA VARCHAR(255),                         -- Descrição da turma
    TIPOCLASSE VARCHAR(100),                       -- Tipo de classe
    GRAU VARCHAR(50),                              -- Grau de ensino
    SERIE VARCHAR(50),                             -- Série escolar
    TURNO VARCHAR(50),                             -- Turno escolar (Manhã, Tarde, Noite)
    DURCLASSE VARCHAR(50),                         -- Duração da classe
    
    FOREIGN KEY (ID) REFERENCES Matricula(ID)
);

-- Tabelas com resultados do aluno
CREATE TABLE MatriculaResultado (
    ID INT PRIMARY KEY,
    PRONATEC BOOLEAN,                              -- Participa do PRONATEC?
    RENDIMENTO VARCHAR(100),                       -- Rendimento (ex: Aprovado, Reprovado)
);

-- Tabela com informações sociais ligadas ao ID da matrícula 
CREATE TABLE MatriculaInclusaoSocial (
    ID INT PRIMARY KEY,                            -- Mesmo ID da matrícula (1:1)
    FLAG_BOLSA_FAM BOOLEAN,                        -- Recebe Bolsa Família?
    FLAG_QUILOMBO BOOLEAN,                         -- Pertencente a comunidade quilombola?

    -- Deficiências declaradas (DEF1 a DEF10)
    DEF1 BOOLEAN, DEF2 BOOLEAN, DEF3 BOOLEAN, DEF4 BOOLEAN, DEF5 BOOLEAN,
    DEF6 BOOLEAN, DEF7 BOOLEAN, DEF8 BOOLEAN, DEP9 BOOLEAN, DEF10 BOOLEAN,

    FOREIGN KEY (ID) REFERENCES Matricula(ID)
);

-- Tabela com informações de apoio e suporte especial 
CREATE TABLE MatriculaSuporteEducacional (
    ID INT PRIMARY KEY,                            -- Mesmo ID da matrícula (1:1)

    -- Informações sobre mobilidade e cuidadores
    FLAG_MORIL_REDUZ BOOLEAN,                      -- O aluno possui mobilidade reduzida?
    TIPO_MOBIL_REDUZ VARCHAR(100),                 -- Especificação do tipo de mobilidade reduzida (ex: cadeira de rodas, muletas)
    FLAG_CUIDADOR BOOLEAN,                         -- O aluno é acompanhado por um cuidador?
    TIPO_CUIDADOR VARCHAR(100),                    -- Tipo de cuidador (ex: cuidador pessoal, acompanhante escolar)
    FLAG_PROF_SAUDE BOOLEAN,                       -- Recebe assistência de profissional da saúde?
    TIPO_PROF_SAUDE VARCHAR(100),                  -- Tipo de profissional de saúde (ex: enfermeiro, terapeuta ocupacional)

    -- Apoios educacionais e adaptações
    ID_AUX_LEI BOOLEAN,                            -- Recebe auxílio para leitura?
    ID_FONTE BOOLEAN,                              -- Utiliza fontes ampliadas?
    ID_AUX_TRANS BOOLEAN,                          -- Recebe apoio para transporte?
    ID_GUIA_INTERPR BOOLEAN,                       -- Possui guia-intérprete?
    ID_COMP_LEITOR_TELA BOOLEAN,                   -- Utiliza leitor de tela?
    ID_INTERPR_LIBRAS BOOLEAN,                     -- Recebe apoio de intérprete de Libras?
    ID_LEI_LAB BOOLEAN,                            -- Possui leitura em laboratório adaptada?
    ID_PROVA_AMPL BOOLEAN,                         -- Realiza provas ampliadas?
    ID_PROVA_BRAILE BOOLEAN,                       -- Realiza provas em braile?
    ID_SEM_NECES_REC BOOLEAN,                      -- Não necessita de recursos específicos?
    ID_VENCE BOOLEAN,                              -- Vence barreiras e dificuldades com apoio?

    FOREIGN KEY (ID) REFERENCES Matricula(ID)
);

-- =============================
-- CONSULTAS SQL NÃO TRIVIAIS
-- =============================

-- 1. Média de Aulas Atribuídas por Aluno em Cada Escola (integra CargaHoraria + Matricula)
SELECT 
    e.NOMEESC,
    COUNT(m.CD_ALUNO_ANONIMIZADO) AS total_alunos,
    SUM(ch.TOT_GERAL_AULA) AS total_aulas_atribuidas,
    ROUND(SUM(ch.TOT_GERAL_AULA) * 1.0 / COUNT(m.CD_ALUNO_ANONIMIZADO), 2) AS media_aulas_por_aluno
FROM CargaHoraria ch
JOIN Escola e ON ch.CODESC = e.CODESC
JOIN Matricula m ON m.CD_ESCOLA = e.CODESC
GROUP BY e.NOMEESC
HAVING COUNT(m.CD_ALUNO_ANONIMIZADO) > 50
ORDER BY media_aulas_por_aluno DESC
LIMIT 10;


-- 2. Aulas Noturnas por Aluno no Turno Noturno (integra CargaHoraria + Matricula)
SELECT 
    e.NOMEESC,
    COUNT(*) FILTER (WHERE m.TURNO = '5') AS alunos_noturno,
    SUM(ch.TOT_AULAS_NOTURNO) AS aulas_atribuidas_noturno,
    ROUND(SUM(ch.TOT_AULAS_NOTURNO) * 1.0 / NULLIF(COUNT(*) FILTER (WHERE m.TURNO = '5'), 0), 2) AS aulas_por_aluno_noturno
FROM Matricula m
JOIN Escola e ON m.CD_ESCOLA = e.CODESC
JOIN CargaHoraria ch ON ch.CODESC = e.CODESC
GROUP BY e.NOMEESC
HAVING COUNT(*) FILTER (WHERE m.TURNO = '5') > 10
ORDER BY aulas_por_aluno_noturno DESC
LIMIT 10;


-- 3. Total de Aulas Atribuídas por Modalidade de Ensino e Ciclo
SELECT 
    ch.MODAL,
    ch.CICLO,
    SUM(ch.TOT_GERAL_AULA) AS total_aulas
FROM CargaHoraria ch
GROUP BY ch.MODAL, ch.CICLO
ORDER BY total_aulas DESC;


-- 4. Escolas com Maior Número de Matrículas de Alunos com Mobilidade Reduzida
SELECT 
    e.NOMEESC,
    COUNT(*) AS total_mobilidade_reduzida
FROM Matricula m
JOIN Escola e ON m.CD_ESCOLA = e.CODESC
JOIN MatriculaSuporteEducacional mse ON mse.ID = m.ID
WHERE mse.FLAG_MORIL_REDUZ = TRUE
GROUP BY e.NOMEESC
ORDER BY total_mobilidade_reduzida DESC
LIMIT 10;

-- 5. Top 10 Disciplinas com Maior Número de Aulas Atribuídas
SELECT 
    d.DEN_MATERIA,
    SUM(ch.TOT_GERAL_AULA) AS total_aulas
FROM CargaHoraria ch
JOIN Disciplina d ON ch.CODMAE = d.CODMAE
GROUP BY d.DEN_MATERIA
ORDER BY total_aulas DESC
LIMIT 10;

END;
